name: Atlas

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]
    paths: [server/schema.sql]

permissions:
  contents: read
  pull-requests: write

env:
  DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres?search_path=public&ssl_mode=disable
  MIGRATIONS_PLAN:

jobs:
  plan:
    name: Plan
    runs-on: ubuntu-24.04

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Atlas
        uses: ariga/setup-atlas@v0
        with:
          cloud-token: ${{ secrets.ATLAS_CLOUD_TOKEN }}
          

      - name: Plan migrations
        id: migrations-plan
        uses: ariga/atlas-action/schema/plan@v1
        with:
          env: dev
          vars: '{"url": "${DATABASE_URL}"}'

      # - name: Push migration plan
      #   run: |
      #     atlas schema plan push --file ${{ steps.migrations-plan.outputs.plan }}
          

      # - name: Set plan to environment
      #   run: echo "{MIGRATIONS_PLAN}={${{ steps.migrations-plan.outputs.plan }}}" >> "$GITHUB_ENV"

  lint:
    name: Lint
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Atlas
        uses: ariga/setup-atlas@v0
        with:
          cloud-token: ${{ secrets.ATLAS_CLOUD_TOKEN }}

      - name: Lint migrations
        uses: ariga/atlas-action/schema/lint@v1
        with:
          url: file://server/schema.sql
          dev-url: docker://postgres/17/dev?search_path=public


  approve-and-push:
    name: Approve-and-Push
    runs-on: ubuntu-24.04

    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Atlas
        uses: ariga/setup-atlas@v0
        with:
          cloud-token: ${{ secrets.ATLAS_CLOUD_TOKEN }}

      - name: Approve plan
        uses: ariga/atlas-action/schema/plan/approve@v1
        with:
          env: dev
          vars: '{"url": "$DATABASE_URL"}'

      - name: Push schema
        uses: ariga/atlas-action/schema/push@v1
        with:
          env: dev
          tag: edge


    

      

      
      
      
      


    